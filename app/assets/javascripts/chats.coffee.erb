# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
$(document).ready =>
  # Use username from localStorage
  username = window.localStorage.getItem('chat_username') || ''
  roomId = $('.chat-box').data('room-id')

  # Sidebar toggle for small screens
  $('#sidebar-toggle').on 'click', (event) ->
    event.preventDefault()
    $sidebar = $('#sidebar')
    if $sidebar.hasClass('show')
      $sidebar.removeClass('show')
      $('body').removeClass('sidebar-open')
      $('#sidebar').addClass('d-none') if window.innerWidth < 768
      $('#sidebar-toggle').attr('aria-expanded', 'false')
    else
      $sidebar.removeClass('d-none') if window.innerWidth < 768
      $sidebar.addClass('show')
      $('body').addClass('sidebar-open')
      $('#sidebar-toggle').attr('aria-expanded', 'true')
    return

  # Format date function
  formatDate = (dateString) ->
    date = new Date(dateString)
    day = String(date.getDate()).padStart(2, '0')
    month = String(date.getMonth() + 1).padStart(2, '0')
    year = date.getFullYear()
    hours = String(date.getHours()).padStart(2, '0')
    minutes = String(date.getMinutes()).padStart(2, '0')
    "#{day}/#{month}/#{year} #{hours}:#{minutes}"

  updateChat = (data) ->
    timestamp = if data.created_at then formatDate(data.created_at) else formatDate(new Date())
    $('.chat-box').append """
      <div class="col-12">
        <div class="chat bg-secondary d-inline-block text-left text-white mb-2">
          <div class="chat-bubble">
            <small class="chat-username">#{data.username}</small>
            <small class="chat-timestamp"> â€¢ #{timestamp}</small>
            <p class="m-0 chat-message">#{data.message}</p>
          </div>
        </div>
      </div>
    """
    # Auto scroll to bottom
    $('.chat-box').scrollTop($('.chat-box')[0].scrollHeight)
    return

  # Initialize username hidden field and message input state
  if username and username.trim().length > 0
    $('#username').val(username)
    $('.username-display').text(username)
    $('.username').removeClass('d-none')
    $('#message').prop('disabled', false)
    $('#message').attr('placeholder', 'Type your message and press Enter...')
  else
    # ensure message input disabled until username is set
    $('#message').prop('disabled', true)
    $('#message').attr('placeholder', 'Please set username to chat')

  # Prevent default form submission
  $('#chat-form').on 'submit', (event) ->
    event.preventDefault()
    event.stopPropagation()

    # Get username from hidden field (populated from localStorage or modal)
    currentUsername = $('#username').val()
    if !currentUsername or currentUsername.trim().length == 0
      # show the username modal (global)
      $('#usernameModal').modal('show')
      return false

    formData = $(this).serialize()
    roomId = $('.chat-box').data('room-id')

    $.ajax
      url: "/rooms/#{roomId}/chats.json"
      type: 'POST'
      data: formData
      dataType: 'json'
      success: (data) ->
        console.log('Message sent successfully')
        $('#message').val('')
        $('#message').focus()
      error: (xhr, status, error) ->
        console.error('Error sending message:', error)
        alert('Failed to send message. Please try again.')

    return false

  # Submit form when Enter is pressed on message input
  $('#message').on 'keypress', (event) ->
    if event.which == 13 or event.keyCode == 13
      event.preventDefault()
      currentUsername = $('#username').val()
      if !currentUsername or currentUsername.trim().length == 0
        $('#usernameModal').modal('show')
        return false

      if $(this).val().trim().length > 0
        $('#chat-form').submit()

      return false
    return

  # When clicking on message input, ensure username is set
  $('#message').on 'click focus', (event) ->
    currentUsername = $('#username').val()
    if !currentUsername or currentUsername.trim().length == 0
      event.preventDefault()
      $('#usernameModal').modal('show')
      return false
    return

  # Pusher subscription - only if there is a roomId
  if roomId
    Pusher.logToConsole = true
    pusher = new Pusher('62cd985e9d8238ed4033',
      cluster: 'ap1'
      encrypted: true)
    channel = pusher.subscribe("chat-room-#{roomId}")
    channel.bind 'new', (data) ->
      console.log('Received message from Pusher:', data)
      updateChat(data)
      return

  return


